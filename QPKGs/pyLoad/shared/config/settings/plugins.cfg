version: 2 

AccioDebridCom - "AccioDebridCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Hoster list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter hosters to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

AlfafileNet - "AlfafileNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

AlldebridCom - "AlldebridCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	bool ignore_status : "Treat all hosters as available (ignore status field)" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	Lowest;LD 144p;LD 240p;SD 380p;HQ 480p;HD 720p;HD 1080p;Highest stream_quality : "Quality to download from stream hosters" = Highest
	bool streams_also : "Also download from stream hosters" = False
	bool use_premium : "Use premium account if available" = True

AlldebridComTorrent - "AlldebridComTorrent":
	bool del_finished : "Delete downloaded torrents from the server" = True
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10

AndroidPhoneNotify - "AndroidPhoneNotify":
	bool alldownloadsfinished : "Notify all downloads finished" = True
	bool alldownloadsprocessed : "Notify all downloads processed" = True
	str apikey : "API key" = 
	bool captcha : "Notify captcha request" = True
	bool downloadfailed : "Notify download failed" = True
	bool downloadfinished : "Notify download finished" = True
	bool enabled : "Activated" = False
	bool exit : "Notify pyLoad shutdown/restart" = False
	bool ignoreclient : "Send notifications if client is connected" = True
	bool packagefailed : "Notify package failed" = True
	bool packagefinished : "Notify package finished" = True
	bool reconnection : "Notify reconnection request" = False
	int sendinterval : "Interval in seconds between notifications" = 1
	int sendpermin : "Max notifications per minute" = 60
	bool update : "Notify pyLoad update" = False

AndroidfilehostCom - "AndroidfilehostCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

AniStreamCom - "AniStreamCom":
	bool enabled : "Activated" = False

AnonfilesCom - "AnonfilesCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

AntiCaptcha - "AntiCaptcha":
	bool check_client : "Don't use if client is connected" = True
	bool enabled : "Activated" = False
	password passkey : "API key" = 
	bool refund : "Request refund if result incorrect" = False
	bool solve_hcaptcha : "Solve HCaptcha" = True
	bool solve_image : "Solve image catcha" = True
	bool solve_recaptcha : "Solve ReCaptcha" = True
	int timeout : "Timeout in seconds (min 60, max 3999)" = 900

AntiStandby - "AntiStandby":
	bool display : "Prevent display standby" = False
	bool enabled : "Activated" = False
	bool hdd : "Prevent HDD standby" = True
	int interval : "HDD touching interval in seconds" = 25
	bool system : "Prevent OS standby" = True

AntiVirus - "AntiVirus":
	Antivirus default;Delete;Quarantine action : "Manage infected files" = Antivirus default
	str avargs : "Executable arguments" = 
	file avfile : "Antivirus executable" = 
	file;folder avtarget : "Scan target" = file
	bool deltotrash : "Move to trash instead delete" = True
	bool enabled : "Activated" = False
	bool ignore-err : "Ignore scan errors" = False
	folder quardir : "Quarantine folder" = 
	bool scanfailed : "Scan failed downloads" = False

AppriseNotify - "AppriseNotify":
	bool alldownloadsfinished : "Notify all downloads finished" = True
	bool alldownloadsprocessed : "Notify all downloads processed" = True
	bool captcha : "Notify captcha request" = True
	string configs : "Configuration(s) path/URL (comma separated)" = 
	bool downloadfailed : "Notify download failed" = True
	bool downloadfinished : "Notify download finished" = True
	bool enabled : "Activated" = False
	bool exit : "Notify pyload shutdown/restart" = False
	bool ignoreclient : "Send notifications if client is connected" = True
	bool packagefailed : "Notify package failed" = True
	bool packagefinished : "Notify package finished" = True
	bool reconnection : "Notify reconnection request" = True
	int sendinterval : "Interval in seconds between notifications" = 1
	int sendpermin : "Max notifications per minute" = 60
	string title : "Notification title" = pyLoad Notification
	bool update : "Notify pyload update" = False

ArchiveOrg - "ArchiveOrg":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

ArchiveOrgFolder - "ArchiveOrgFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

BackinNet - "BackinNet":
	bool enabled : "Activated" = False

BasketbuildCom - "BasketbuildCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

BayfilesCom - "BayfilesCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

BezvadataCz - "BezvadataCz":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

BypassCaptcha - "BypassCaptcha":
	bool check_client : "Don't use if client is connected" = True
	bool enabled : "Activated" = False
	password passkey : "Access key" = 

CCF - "CCF":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

Captcha9Kw - "Captcha9Kw":
	int captchaperhour : "Captcha per hour" = 9999
	int captchapermin : "Captcha per minute" = 9999
	bool check_client : "Don't use if client is connected" = True
	bool confirm : "Confirm Captcha (cost +6 credits)" = False
	bool enabled : "Activated" = False
	str hoster_options : "Hoster options (format pluginname;prio 1;selfsolve 1;confirm 1;timeout 900|...)" = 
	password passkey : "API key" = 
	int prio : "Priority (max 10)(cost +0 -> +10 credits)" = 0
	int queue : "Max. Queue (max 999)" = 50
	bool selfsolve : "Selfsolve (manually solve your captcha in your 9kw client if active)" = False
	bool solve_interactive : "Solve interactive captcha (cost 30 credits)" = True
	int timeout : "Timeout in seconds (min 60, max 3999)" = 900

Checksum - "Checksum":
	fail;retry;nothing check_action : "What to do if check fails?" = retry
	bool check_checksum : "Check checksum? (If False only size will be verified)" = True
	bool enabled : "Activated" = False
	int max_tries : "Number of retries" = 2
	fail;nothing retry_action : "What to do if all retries fail?" = fail
	int wait_time : "Time to wait before each retry (seconds)" = 1

ChipDe - "ChipDe":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

CircleCaptcha - "CircleCaptcha":
	bool enabled : "Activated" = False

ClickNLoad - "ClickNLoad":
	queue;collector dest : "Add packages to" = collector
	bool enabled : "Activated" = False
	bool extern : "Listen for external connections" = True
	int port : "Port" = 9666

ClicknuploadCom - "ClicknuploadCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

CloudFlareDdos - "CloudFlareDdos":
	bool enabled : "Activated" = False

CloudMailRu - "CloudMailRu":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

CloudMailRuFolder - "CloudMailRuFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

CloudsharesNet - "CloudsharesNet":
	bool enabled : "Activated" = False

CloudsixMe - "CloudsixMe":
	bool enabled : "Activated" = False

CloudzillaTo - "CloudzillaTo":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

CloudzillaToFolder - "CloudzillaToFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

CoinHive - "CoinHive":
	bool enabled : "Activated" = False

CosmoboxOrg - "CosmoboxOrg":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10

CramitIn - "CramitIn":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

CriptTo - "CriptTo":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

CryptCat - "CryptCat":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

CzshareCom - "CzshareCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

CzshareComFolder - "CzshareComFolder":
	bool activated : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

DLC - "DLC":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

DailymotionCom - "DailymotionCom":
	bool enabled : "Activated" = True
	Lowest;LD 144p;LD 240p;SD 380p;HQ 480p;HD 720p;HD 1080p;Highest quality : "Quality" = Highest

DailymotionComFolder - "DailymotionComFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

DailyuploadsNet - "DailyuploadsNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

DataHu - "DataHu":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

DataHuFolder - "DataHuFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

DataportCz - "DataportCz":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

DatoidCz - "DatoidCz":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

DdownloadCom - "DdownloadCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

DeathByCaptcha - "DeathByCaptcha":
	bool check_client : "Don't use if client is connected" = True
	bool enabled : "Activated" = False
	password password : "Password" = 
	str username : "Username" = 

DebridItaliaCom - "DebridItaliaCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

DebridlinkFr - "DebridlinkFr":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

DebridlinkFrTorrent - "DebridlinkFrTorrent":
	bool enabled : "Activated" = True
	str exclude_filter : "File types to exclude (e.g. *.exe;advertisement.txt, leave empty to select none)" = 
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	str include_filter : "File types to include (e.g. *.iso;*.zip, leave empty to select none)" = *.*
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10

DebridplanetCom - "DebridplanetCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

DefaultPlugin - "DefaultPlugin":
	bool enabled : "Activated" = True

DeleteFinished - "DeleteFinished":
	bool deloffline : "Delete package with offline links" = False
	bool enabled : "Activated" = False
	int interval : "Check interval in hours" = 72

DepositfilesCom - "DepositfilesCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

DepositfilesComFolder - "DepositfilesComFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

Dereferer - "Dereferer":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

DevhostSt - "DevhostSt":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

DevhostStFolder - "DevhostStFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

DiscordNotifier - "DiscordNotifier":
	bool alldownloadsfinished : "Notify all downloads finished" = True
	bool alldownloadsprocessed : "Notify all downloads processed" = True
	bool captcha : "Notify captcha request" = True
	bool downloadfailed : "Notify download failed" = True
	bool downloadfinished : "Notify download finished" = True
	bool enabled : "Activated" = False
	bool exit : "Notify pyload shutdown/restart" = False
	bool ignoreclient : "Send notifications if client is connected" = True
	bool packagefailed : "Notify package failed" = True
	bool packagefinished : "Notify package finished" = True
	bool reconnection : "Notify reconnection request" = True
	int sendinterval : "Interval in seconds between notifications" = 1
	int sendpermin : "Max notifications per minute" = 60
	bool update : "Notify pyload update" = False
	string webhookurl : "The URL of the webhook" = 

DlFreeFr - "DlFreeFr":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

DlProtectCom - "DlProtectCom":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

DownloadScheduler - "DownloadScheduler":
	bool abort : "Abort active downloads when start period with speed 0" = False
	bool enabled : "Activated" = False
	str timetable : "List time periods as hh:mm full or number(kB/s)" = 0:00 full, 7:00 250, 10:00 0, 17:00 150

DownsterNet - "DownsterNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = False
	bool use_premium : "Use premium account if available" = True

DropboxCom - "DropboxCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

EasybytezCom - "EasybytezCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

EasybytezComFolder - "EasybytezComFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

EdiskCz - "EdiskCz":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

EmbeduploadCom - "EmbeduploadCom":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	str ignoredHoster : "Ignored hoster list (bar-separated)" = 
	str preferedHoster : "Prefered hoster list (bar-separated)" = embedupload
	bool use_premium : "Use premium account if available" = True

EuroshareEu - "EuroshareEu":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

ExashareCom - "ExashareCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

ExpertDecoders - "ExpertDecoders":
	bool check_client : "Don't use if client is connected" = True
	bool enabled : "Activated" = False
	password passkey : "Access key" = 

ExternalScripts - "ExternalScripts":
	bool enabled : "Activated" = True
	bool unlock : "Execute script concurrently" = False

ExtmatrixCom - "ExtmatrixCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

ExtractArchive - "ExtractArchive":
	bool delete : "Delete archive after extraction" = True
	bool deltotrash : "Move to trash instead delete" = True
	folder destination : "Extract files to folder" = 
	bool enabled : "Activated" = False
	str excludefiles : "Don't extract the following files" = *.nfo,*.DS_Store,index.dat,thumb.db
	str extensions : "Extract archives ending with extension" = 001,7z,bz2,bzip2,gz,gzip,lha,lzh,lzma,rar,tar,taz,tbz,tbz2,tgz,xar,xz,z,zip
	bool fullpath : "Extract with full paths" = True
	bool keepbroken : "Try to extract broken archives" = False
	bool overwrite : "Overwrite files" = False
	file passwordfile : "Password file" = /share/CACHEDEV2_DATA/.qpkg/pyLoad/config/data/passwords.txt
	int priority : "Process priority" = 0
	bool recursive : "Extract archives in archives" = True
	bool repair : "Repair broken archives (RAR required)" = False
	bool subfolder : "Create subfolder for each package" = False
	bool usepasswordfile : "Use password file" = True
	bool waitall : "Run after all downloads was processed" = False

FastixRu - "FastixRu":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

FastshareCz - "FastshareCz":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

File4SafeCom - "File4SafeCom":
	bool enabled : "Activated" = False

FileAl - "FileAl":
	bool enabled : "Activated" = False

FileSharkPl - "FileSharkPl":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FileStoreTo - "FileStoreTo":
	bool beadheader_retry : "Retry download on HTTP Header 503" = True
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int freeslot_attempts : "Number of retries to wait for free slot" = 15
	int freeslot_wait : "Delay to wait for free slot (seconds)" = 600
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FileboomMe - "FileboomMe":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FilecloudIo - "FilecloudIo":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FilecloudIoFolder - "FilecloudIoFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FilecryptCc - "FilecryptCc":
	bool enabled : "Activated" = True
	bool handle_mirror_pages : "Handle Mirror Pages" = True

FiledropperCom - "FiledropperCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FilefactoryCom - "FilefactoryCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FilefactoryComFolder - "FilefactoryComFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FilefoxCc - "FilefoxCc":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FilejokerNet - "FilejokerNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FileomCom - "FileomCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FilepupNet - "FilepupNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FilerNet - "FilerNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FilerNetFolder - "FilerNetFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FilerioCom - "FilerioCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FilesMailRu - "FilesMailRu":
	bool enabled : "Activated" = True

FilestubeCom - "FilestubeCom":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FiletramCom - "FiletramCom":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FileuploadCom - "FileuploadCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FileuploadNet - "FileuploadNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FiregetCom - "FiregetCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FistfastNet - "FistfastNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FlyFilesNet - "FlyFilesNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FourChanOrg - "FourChanOrg":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

FourSharedCom - "FourSharedCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FreakhareComFolder - "FreakhareComFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FreetexthostCom - "FreetexthostCom":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FshareVn - "FshareVn":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

FshareVnFolder - "FshareVnFolder":
	bool dl_subfolders : "Download subfolders" = False
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool package_subfolder : "Subfolder as a separate package" = False
	bool use_premium : "Use premium account if available" = True

Ftp - "Ftp":
	bool enabled : "Activated" = True

FurLy - "FurLy":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

GamefrontCom - "GamefrontCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

GetTwentyFourOrg - "GetTwentyFourOrg":
	bool chk_filesize : "Check file size" = False
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

GigapetaCom - "GigapetaCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

Go4UpCom - "Go4UpCom":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

GofileIo - "GofileIo":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

GofileIoFolder - "GofileIoFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

GooGl - "GooGl":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

GooIm - "GooIm":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

GoogledriveCom - "GoogledriveCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

GoogledriveComDereferer - "GoogledriveComDereferer":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

GoogledriveComFolder - "GoogledriveComFolder":
	bool dl_subfolders : "Download subfolders" = False
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool package_subfolder : "Subfolder as a seperate package" = False
	bool use_premium : "Use premium account if available" = True

HCaptcha - "HCaptcha":
	bool enabled : "Activated" = False

HearthisAt - "HearthisAt":
	bool enabled : "Activated" = True

HearthisAtFolder - "HearthisAtFolder":
	bool dl_subfolders : "Download subfolders" = False
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool package_subfolder : "Subfolder as a separate package" = False
	bool use_premium : "Use premium account if available" = True

HellshareCz - "HellshareCz":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

HflixIn - "HflixIn":
	bool enabled : "Activated" = False

HighWayMe - "HighWayMe":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

HitfileNet - "HitfileNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

HjSplit - "HjSplit":
	bool enabled : "Activated" = False

HoerbuchIn - "HoerbuchIn":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

HostujeNet - "HostujeNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

HotFolder - "HotFolder":
	Packages;Queue add_to : "Add files to" = Queue
	bool delete : "Delete added containers" = False
	bool enable_extension_filter : "Extension filter" = False
	bool enabled : "Activated" = False
	str extension_filter : "Extensions to look for (comma separated)" = dlc
	str file : "Link file" = links.txt
	folder folder : "Folder to watch" = /share/CACHEDEV2_DATA/.qpkg/pyLoad/config/data/watchdir
	int interval : "File / folder check interval in seconds (minimum 20)" = 60
	bool watchfile : "Watch link file" = False

HotlinkCc - "HotlinkCc":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

Http - "Http":
	bool enabled : "Activated" = True

HugefilesNet - "HugefilesNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

HundredEightyUploadCom - "HundredEightyUploadCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

IRC - "IRC":
	bool captcha : "Send captcha requests" = True
	bool enabled : "Activated" = False
	str host : "IRC-Server Address" = Enter your server here!
	str ident : "Clients ident" = pyload-irc
	bool info_file : "Inform about every file finished" = False
	bool info_pack : "Inform about every package finished" = True
	int maxline : "Maximum line per message" = 6
	str nick : "Nickname the Client will take" = pyLoad-IRC
	str owner : "Nickname the Client will accept commands from" = Enter your nick here!
	int port : "IRC-Server Port" = 6667
	str realname : "Realname" = pyload-irc
	bool ssl : "Use SSL" = False

IfolderRu - "IfolderRu":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

ImageTyperz - "ImageTyperz":
	bool check_client : "Don't use if client is connected" = True
	bool enabled : "Activated" = False
	password password : "Password" = 
	str username : "Username" = 

ImgurCom - "ImgurCom":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

IronfilesNet - "IronfilesNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

JDlist - "JDlist":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

JumbofilesCom - "JumbofilesCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

JunkyvideoCom - "JunkyvideoCom":
	bool enabled : "Activated" = False

JunocloudMe - "JunocloudMe":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

JustPremium - "JustPremium":
	bool enabled : "Activated" = False
	str excluded : "Exclude hosters (comma separated)" = 
	str included : "Include hosters (comma separated)" = 

KatfileCom - "KatfileCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

Keep2ShareCc - "Keep2ShareCc":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

KingfilesNet - "KingfilesNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

KrakenfilesCom - "KrakenfilesCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

LeechThreeHundreedSixtyCom - "LeechThreeHundreedSixtyCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

LetsuploadCc - "LetsuploadCc":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

LetsuploadCo - "LetsuploadCo":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

LibgenIo - "LibgenIo":
	string api_fields : "API fields to fetch" = id,authorfamily1,authorname1,series1,extension,language,pages,isbn,year
	string api_mirrors : "API mirror URLs (space-separated)" = http://libgen.io/json.php http://booksdescr.org/json.php
	enabled enabled : "Activated" = True
	int max_recursions : "Maximum directories to recurse into" = 100
	string mirrors : "Libgen mirror URL patterns (space-separated)" = http://booksdl.org/{topiclong}/get.php?md5={md5} http://booksdl.org/get.php?md5={md5}
	bool query_api : "Query libgen API to fetch more book details" = False

LinkFilter - "LinkFilter":
	bool enabled : "Activated" = False
	str filter : "Filter links containing (comma separated)" = 
	bool filter_all : "Filter all link plugin types (also crypters, containers...)" = False
	listed;unlisted list_type : "Allow only links that are" = unlisted

LinkifierCom - "LinkifierCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

LinksnappyCom - "LinksnappyCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

LinksnappyComTorrent - "LinksnappyComTorrent":
	bool del_finished : "Delete downloaded torrents from the server" = True
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10

LixIn - "LixIn":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

LoadTo - "LoadTo":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

LogMarker - "LogMarker":
	bool enabled : "Activated" = False
	bool mark_day : "Mark days" = True
	bool mark_hour : "Mark hours" = True

MediafireCom - "MediafireCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

MediafireComFolder - "MediafireComFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

MegaCoNz - "MegaCoNz":
	bool enabled : "Activated" = True

MegaCoNzFolder - "MegaCoNzFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

MegaDebridEu - "MegaDebridEu":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

MegaRapidCz - "MegaRapidCz":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

MegaRapidCzFolder - "MegaRapidCzFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

MegaRapidoNet - "MegaRapidoNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

MegacrypterCom - "MegacrypterCom":
	bool enabled : "Activated" = True

MegadyskPl - "MegadyskPl":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

MegadyskPlFolder - "MegadyskPlFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

MegasharesCom - "MegasharesCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

MegaupNet - "MegaupNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

MergeFiles - "MergeFiles":
	bool enabled : "Activated" = False

MirrorcreatorCom - "MirrorcreatorCom":
	bool enabled : "Activated" = True
	bool grab_all : "Grab all URLs (default only first match)" = False
	str hosters_priority : "Prefered hoster priority (bar-separated)" = 
	str ignored_hosters : "Ignored hoster list (bar-separated)" = 

MovReelCom - "MovReelCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

MultiHome - "MultiHome":
	bool enabled : "Activated" = False
	str interfaces : "Interfaces" = None

MultiUpOrg - "MultiUpOrg":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool grab_all : "Grab all URLs (default only first match)" = False
	str hosts_priority : "Prefered hosts priority (bar-separated)" = 
	str ignored_hosts : "Ignored hosts list (bar-separated)" = 
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

MultihostersCom - "MultihostersCom":
	bool enabled : "Activated" = True

MultiloadCz - "MultiloadCz":
	bool enabled : "Activated" = True
	str ignoredHoster : "Ignored hoster list (bar-separated)" = 
	bool subfolder_per_package : "Create a subfolder for each package" = True
	bool use_premium : "Use premium account if available" = True
	bool use_subfolder : "Save package to subfolder" = True
	str usedHoster : "Prefered hoster list (bar-separated)" = 

MultishareCz - "MultishareCz":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool use_premium : "Use premium account if available" = True

MyfastfileCom - "MyfastfileCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

MystoreTo - "MystoreTo":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

NarodRu - "NarodRu":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

NippyshareCom - "NippyshareCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10

NitrobitNet - "NitrobitNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

NitroflareCom - "NitroflareCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

NitroflareComFolder - "NitroflareComFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

NoPremiumPl - "NoPremiumPl":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

NofileIo - "NofileIo":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

NosuploadCom - "NosuploadCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

NosvideoCom - "NosvideoCom":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

NovafileCom - "NovafileCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

NowVideoSx - "NowVideoSx":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

OneFichierCom - "OneFichierCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

OnlineTvRecorder - "OnlineTvRecorder":
	bool enabled : "Activated" = True

OpenloadCo - "OpenloadCo":
	bool enabled : "Activated" = False

OpenloadIo - "OpenloadIo":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

OverLoadMe - "OverLoadMe":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

PastebinCom - "PastebinCom":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

PastedCo - "PastedCo":
	bool enabled : "Activated" = True

PixeldrainCom - "PixeldrainCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

PornhostCom - "PornhostCom":
	bool enabled : "Activated" = True

PornhubCom - "PornhubCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

PornovkaCz - "PornovkaCz":
	bool enabled : "Activated" = True

PorntrexCom - "PorntrexCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	360p;480p;720p;1080p;1440p;2160p quality : "Quality Setting" = 1080p

PremiumTo - "PremiumTo":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

PremiumizeMe - "PremiumizeMe":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

PromptfileCom - "PromptfileCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

PushBullet - "PushBullet":
	bool alldownloadsfinished : "Notify all downloads finished" = True
	bool alldownloadsprocessed : "Notify all downloads processed" = True
	bool captcha : "Notify captcha request" = True
	bool downloadfailed : "Notify download failed" = True
	bool downloadfinished : "Notify download finished" = True
	bool enabled : "Activated" = False
	bool exit : "Notify pyLoad shutdown/restart" = False
	bool ignoreclient : "Send notifications if client is connected" = True
	bool packagefailed : "Notify package failed" = True
	bool packagefinished : "Notify package finished" = True
	bool reconnection : "Notify reconnection request" = False
	int sendinterval : "Interval in seconds between notifications" = 1
	int sendpermin : "Max notifications per minute" = 60
	str tokenkey : "Access Token" = 
	bool update : "Notify pyLoad update" = False

PushOver - "PushOver":
	bool alldownloadsfinished : "Notify all downloads finished" = True
	bool alldownloadsprocessed : "Notify all downloads processed" = True
	bool captcha : "Notify captcha request" = True
	bool downloadfailed : "Notify download failed" = True
	bool downloadfinished : "Notify download finished" = True
	bool enabled : "Activated" = False
	bool exit : "Notify pyLoad shutdown/restart" = False
	bool ignoreclient : "Send notifications if client is connected" = True
	bool packagefailed : "Notify package failed" = True
	bool packagefinished : "Notify package finished" = True
	bool reconnection : "Notify reconnection request" = False
	int sendinterval : "Interval in seconds between notifications" = 1
	int sendpermin : "Max notifications per minute" = 60
	str tokenkey : "Token key" = 
	bool update : "Notify pyLoad update" = False
	str userkey : "User key" = 

PutdriveCom - "PutdriveCom":
	bool enabled : "Activated" = True

QuickshareCz - "QuickshareCz":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

QuickshareCzFolder - "QuickshareCzFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

RPNetBiz - "RPNetBiz":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

RSDF - "RSDF":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

RapideoPl - "RapideoPl":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

RapidfileshareNet - "RapidfileshareNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

RapidgatorNet - "RapidgatorNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

RapiduNet - "RapiduNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

RarefileNet - "RarefileNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

ReCaptcha - "ReCaptcha":
	bool enabled : "Activated" = False

RealdebridCom - "RealdebridCom":
	bool chk_filesize : "Check file size" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

RealdebridComTorrent - "RealdebridComTorrent":
	bool del_finished : "Delete downloaded torrents from the server" = True
	bool enabled : "Activated" = True
	str exclude_filter : "File types to exclude (e.g. *.exe;advertisement.txt, leave empty to select none)" = 
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	str include_filter : "File types to include (e.g. *.iso;*.zip, leave empty to select none)" = *.*
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10

RedtubeCom - "RedtubeCom":
	bool enabled : "Activated" = True

RehostTo - "RehostTo":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

RemixshareCom - "RemixshareCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

RestartFailed - "RestartFailed":
	bool enabled : "Activated" = False
	int interval : "Check interval in minutes" = 90

RgHostNet - "RgHostNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

SafelinkingNet - "SafelinkingNet":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

SafesharingEu - "SafesharingEu":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

SecureUploadEu - "SecureUploadEu":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

SenditCloud - "SenditCloud":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

SendmywayCom - "SendmywayCom":
	bool enabled : "Activated" = False

SendspaceCom - "SendspaceCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

SevenZip - "SevenZip":
	bool enabled : "Activated" = False

SexuriaCom - "SexuriaCom":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_subfolder : "Save package to subfolder" = True

ShSt - "ShSt":
	bool enabled : "Activated" = True

Share4WebCom - "Share4WebCom":
	bool enabled : "Activated" = True

SharebeastCom - "SharebeastCom":
	bool enabled : "Activated" = False

ShareplaceCom - "ShareplaceCom":
	bool enabled : "Activated" = True

SimplyPremiumCom - "SimplyPremiumCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

SimplydebridCom - "SimplydebridCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

SizedriveCom - "SizedriveCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

SkipRev - "SkipRev":
	bool enabled : "Activated" = False
	Auto;Manual mode : "Choose recovery archives to skip" = Auto
	int revtokeep : "Number of recovery archives to keep for package" = 0

SmoozedCom - "SmoozedCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

SmuleCom - "SmuleCom":
	bool enabled : "Activated" = False

SolidfilesCom - "SolidfilesCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

SolveMedia - "SolveMedia":
	bool enabled : "Activated" = False

SoundcloudCom - "SoundcloudCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

SpeedyshareCom - "SpeedyshareCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

StreamCz - "StreamCz":
	mp4;webm container : "Container" = mp4
	bool enabled : "Activated" = True
	144p;240p;360p;480p;720p;1080p quality : "Quality" = 720p

StreamcloudEu - "StreamcloudEu":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

SuprafilesMe - "SuprafilesMe":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

TNTVillageScambioeticoOrg - "TNTVillageScambioeticoOrg":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

TORRENT - "TORRENT":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	None;c:AlldebridComTorrent;c:DebridlinkFrTorrent;h:LinksnappyComTorrent;c:RealdebridComTorrent;h:ZbigzCom torrent_plugin : "Associate torrents / magnets with plugin" = None
	bool use_premium : "Use premium account if available" = True

TXT - "TXT":
	bool enabled : "Activated" = True
	str encoding : "File encoding" = utf-8-sig
	bool flush : "Flush list after adding" = False
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

TbSevenPl - "TbSevenPl":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

TenluaVn - "TenluaVn":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

TenluaVnFolder - "TenluaVnFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

TinyurlCom - "TinyurlCom":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

TnyCz - "TnyCz":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

TransmissionRPC - "TransmissionRPC":
	bool enabled : "Activated" = False
	str rpc_url : "Transmission RPC URL" = http://127.0.0.1:9091/transmission/rpc

TurbobitNet - "TurbobitNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

TurbobitNetFolder - "TurbobitNetFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

TusfilesNet - "TusfilesNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

TusfilesNetFolder - "TusfilesNetFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

TwoSharedCom - "TwoSharedCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

TwojlimitPl - "TwojlimitPl":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

UlozTo - "UlozTo":
	Image;Sound captcha : "Captcha recognition" = Image
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

UlozToFolder - "UlozToFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

UloziskoSk - "UloziskoSk":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

UnRar - "UnRar":
	bool ignore_warnings : "Ignore unrar warnings" = False

UnSkipOnFail - "UnSkipOnFail":
	bool enabled : "Activated" = True

UnTar - "UnTar":
	bool enabled : "Activated" = False

UnZip - "UnZip":
	bool enabled : "Activated" = False

UnibytesCom - "UnibytesCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

UpdateManager - "UpdateManager":
	bool autorestart : "Auto-restart pyLoad when required" = True
	int checkinterval : "Check interval in hours" = 6
	bool checkonstart : "Check for updates on startup" = True
	bool checkperiod : "Check for updates periodically" = True
	bool enabled : "Activated" = False
	bool nodebugupdate : "Don't update plugins in debug mode" = False
	bool reloadplugins : "Monitor plugin code changes in debug mode" = True

UpfileVn - "UpfileVn":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

UpleaCom - "UpleaCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

UploadcCom - "UploadcCom":
	bool enabled : "Activated" = False

UploadgigCom - "UploadgigCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

UploadheroCom - "UploadheroCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

UploadrocketNet - "UploadrocketNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

UploadshipCom - "UploadshipCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

UpstoreNet - "UpstoreNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

UptoboxCom - "UptoboxCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

UserAgentSwitcher - "UserAgentSwitcher":
	int connecttimeout : "Max timeout for link connection in seconds" = 60
	bool enabled : "Activated" = True
	int maxredirs : "Maximum number of redirects to follow" = 10
	str useragent : "Custom user-agent string" = Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:87.0) Gecko/20100101 Firefox/87.0

UserscloudCom - "UserscloudCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

UseruploadNet - "UseruploadNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

VeehdCom - "VeehdCom":
	bool enabled : "Activated" = True
	bool filename_spaces : "Allow spaces in filename" = False
	str replacement_char : "Filename replacement character" = _

VeohCom - "VeohCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

VidPlayNet - "VidPlayNet":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

VimeoCom - "VimeoCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	Lowest;360p;540p;720p;1080p;Highest quality : "Quality" = Highest
	bool use_premium : "Use premium account if available" = True

VkCom - "VkCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

WebshareCz - "WebshareCz":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

WetransferCom - "WetransferCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

WindowsPhoneNotify - "WindowsPhoneNotify":
	bool alldownloadsfinished : "Notify all downloads finished" = True
	bool alldownloadsprocessed : "Notify all downloads processed" = True
	bool captcha : "Notify captcha request" = True
	bool downloadfailed : "Notify download failed" = True
	bool downloadfinished : "Notify download finished" = True
	bool enabled : "Activated" = False
	bool exit : "Notify pyLoad shutdown/restart" = False
	bool ignoreclient : "Send notifications if client is connected" = True
	bool packagefailed : "Notify package failed" = True
	bool packagefinished : "Notify package finished" = True
	str pushid : "Push ID" = 
	str pushurl : "Push url" = 
	bool reconnection : "Notify reconnection request" = False
	int sendinterval : "Interval in seconds between notifications" = 1
	int sendpermin : "Max notifications per minute" = 60
	bool update : "Notify pyLoad update" = False

WorldbytezCom - "WorldbytezCom":
	bool enabled : "Activated" = False

WrzucTo - "WrzucTo":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

WrzucajplikiPl - "WrzucajplikiPl":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

XDCC - "XDCC":
	str channel_opts : "Join custom channel before joining channel (format: ircserver/channel/customchannel, ...)" = 
	str ident : "Ident" = pyloadident
	str invite_opts : "Invite bots options (format ircserver/channel/invitebot/password, ...)" = 
	str nick : "Nickname" = pyload
	str nick_pw : "Registered nickname password (optional)" = 
	int queue_query_interval : "Interval to query queue position when queued (minutes, 0 = disabled)" = 3
	int queued_timeout : "Time to wait before failing if queued (minutes, 0 = infinite)" = 300
	str realname : "Realname" = pyloadreal
	int response_timeout : "XDCC Bot response timeout (seconds, minimum 60)" = 300
	bool try_resume : "Request XDCC resume?" = True
	str waiting_opts : "Time to wait before requesting pack from the XDCC Bot (format: ircserver/channel/wait_seconds, ...)" = 0

XFileSharing - "XFileSharing":
	bool chk_filesize : "Check file size" = True
	str crypter_list : "Decrypter list (comma separated)" = 
	bool enabled : "Activated" = False
	bool fallback : "Fallback to free download if premium fails" = True
	str hoster_list : "Downloader list (comma separated)" = 
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_builtin_list : "Load built-in plugin list" = True
	bool use_decrypter_list : "Load listed crypters only" = False
	bool use_downloader_list : "Load listed hosters only" = False
	bool use_premium : "Use premium account if available" = True

XFileSharingFolder - "XFileSharingFolder":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

XHamsterCom - "XHamsterCom":
	bool enabled : "Activated" = True
	720p;480p;240p quality : "Preferred quality" = 480p

XMPP - "XMPP":
	bool all_download : "Inform about all download finished" = False
	bool captcha : "Send captcha requests" = True
	bool download_failed : "Notify download failed" = True
	bool download_start : "Notify download start" = True
	bool enabled : "Activated" = False
	bool info_file : "Inform about every file finished" = False
	bool info_pack : "Inform about every package finished" = True
	str jid : "Jabber ID" = user@exmaple-jabber-server.org
	int maxline : "Maximum line per message" = 6
	str owners : "List of JIDs accepting commands from" = me@icq-gateway.org;some@msn-gateway.org
	bool package_failed : "Notify package failed" = False
	str pw : "Password" = 
	bool tls : "Use TLS" = True
	bool use_ipv6 : "Use ipv6" = False
	bool use_ssl : "Use old SSL" = False

XVideosCom - "XVideosCom":
	bool enabled : "Activated" = True

XdadevelopersCom - "XdadevelopersCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

XupPl - "XupPl":
	bool enabled : "Activated" = True
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool use_premium : "Use premium account if available" = True

YadiSk - "YadiSk":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

YesPornPleaseCom - "YesPornPleaseCom":
	bool enabled : "Activated" = True
	240p;360p;480p;720p quality : "Quality" = 720p

YibaishiwuCom - "YibaishiwuCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

YoupornCom - "YoupornCom":
	bool enabled : "Activated" = True

YourfilesTo - "YourfilesTo":
	bool enabled : "Activated" = True

YoutubeCom - "YoutubeCom":
	bool .3gp : "Allow .3gp" = False
	bool .flv : "Allow .flv" = True
	bool .mkv : "Allow .mkv" = True
	bool .mp4 : "Allow .mp4" = True
	bool .webm : "Allow .webm" = True
	bool 3d : "Prefer 3D" = False
	bool aac : "Allow aac audio (DASH video only)" = True
	bool ac3 : "Allow ac3 audio (DASH video only)" = True
	int afmt : "Audio FMT/ITAG Number (0 for auto)" = 0
	bool auto_subs : "Allow machine generated subtitles" = True
	bool dts : "Allow dts audio (DASH video only)" = True
	bool enabled : "Activated" = True
	bool opus : "Allow opus audio (DASH video only)" = True
	int priority : "ffmpeg process priority" = 0
	sd;hd;fullhd;240p;360p;480p;720p;1080p;1440p;2160p;3072p;4320p quality : "Quality Setting" = hd
	off;all_specified;first_available subs_dl : "Download subtitles" = off
	str subs_dl_langs : "Subtitle <a href='https://sites.google.com/site/tomihasa/google-language-codes#interfacelanguage'>language codes</a> to download (comma separated)" = 
	bool subs_embed : "Embed subtitles inside the output file (.mp4 and .mkv only)" = False
	str subs_translate : "Translate subtitles to <a href='https://sites.google.com/site/tomihasa/google-language-codes#interfacelanguage'>language</a> (forces first_available)" = 
	int vfmt : "Video FMT/ITAG Number (0 for auto)" = 0
	bool vorbis : "Allow vorbis audio (DASH video only)" = True

YoutubeComFolder - "YoutubeComFolder":
	bool enabled : "Activated" = True
	bool favorites : "Grab user (channel) favorite videos" = False
	Default;Yes;No folder_per_package : "Create folder for each package" = Default
	bool likes : "Grab user (channel) liked videos" = False
	bool uploads : "Grab channel unplaylisted videos" = True
	bool use_premium : "Use premium account if available" = True

ZDF - "ZDF":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True

ZbigzCom - "ZbigzCom":
	bool enabled : "Activated" = False

ZeveraCom - "ZeveraCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = False
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	int mh_interval : "Reload interval in hours" = 12
	str mh_list : "Downloader list (comma separated)" = 
	all;listed;unlisted mh_mode : "Filter downloaders to use" = all
	bool revert_failed : "Revert to standard download if fails" = True
	bool use_premium : "Use premium account if available" = True

ZippyshareCom - "ZippyshareCom":
	bool chk_filesize : "Check file size" = True
	bool enabled : "Activated" = True
	bool fallback : "Fallback to free download if premium fails" = True
	int max_wait : "Reconnect if waiting time is greater than minutes" = 10
	bool use_premium : "Use premium account if available" = True
