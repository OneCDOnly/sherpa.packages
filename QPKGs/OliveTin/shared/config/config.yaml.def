# There is a built-in micro proxy that will host the webui and REST API all on 
# one port (this is called the "Single HTTP Frontend") and means you just need 
# one open port in the container/firewalls/etc. 
#
# Listen on all addresses available, port 1337
listenAddressSingleHTTPFrontend: 0.0.0.0:1337 

# Choose from INFO (default), WARN and DEBUG
logLevel: "INFO"

# Actions (buttons) to show up on the WebUI:
actions:   
  # This will run a simple script that you create.
- title: Run backup script
  shell: /opt/backupScript.sh
  icon: backup

  # This will send 1 ping (-c 1)
  # Docs: https://docs.olivetin.app/action-ping.html
- title: Ping host
  shell: ping {{ host }} -c {{ count }}
  icon: ping
  arguments:
    - name: host
      title: host
      type: ascii_identifier
      default: example.com
      description: The host that you want to ping

    - name: count
      title: Count
      type: int
      default: 1
      description: How many times to do you want to ping?
  
  # Restart lightdm on host "server1"
  # Docs: https://docs.olivetin.app/action-ping.html
- title: restart httpd
  icon: restart
  shell: ssh root@server1 'service httpd restart'

  # OliveTin can run long-running jobs like Ansible playbooks. 
  # 
  # For such jobs, you will need to install ansible-playbook on the host where
  # you are running OliveTin, or in the container.
  #
  # You probably want a much longer timeout as well (so that ansible completes).
- title: "Run Ansible Playbook"
  icon: "&#x1F1E6"
  shell: ansible-playbook -i /etc/hosts /root/myRepo/myPlaybook.yaml
  timeout: 120

  # OliveTin can control containers - docker is just a command line app.
  # 
  # However, if you are running in a container you will need to do some setup,
  # see the docs below.
  #
  # Docs: https://docs.olivetin.app/action-container-control.html
- title: Restart Docker Container
  icon: restart
  shell: docker restart {{ container }}
  arguments:
    - name: container
      title: Container name
      choices:
        - value: plex
        - value: traefik
        - value: grafana

- title: Slow Script
  shell: sleep 3
  timeout: 5
  icon: "&#x1F971"

- title: Broken Script (timeout)
  shell: sleep 5
  timeout: 5
  icon: "&#x1F62A"

